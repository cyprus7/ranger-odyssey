apiVersion: apps/v1
kind: Deployment
metadata:
  name: api
spec:
  replicas: {{ .Values.app.replicas }}
  selector: { matchLabels: { app: api } }
  template:
    metadata: { labels: { app: api } }
    spec:
      containers:
        - name: api
          image: "{{ .Values.image.repository }}/backend:{{ .Values.image.tag }}"
          ports: [{ containerPort: 3001 }]
          env:
            - name: POSTGRES_URL
              valueFrom: { secretKeyRef: { name: app-secrets, key: POSTGRES_URL } }
            - name: REDIS_URL
              valueFrom: { secretKeyRef: { name: app-secrets, key: REDIS_URL } }
            - name: BOT_TOKEN
              valueFrom: { secretKeyRef: { name: app-secrets, key: BOT_TOKEN } }
---
apiVersion: v1
kind: Service
metadata: { name: api }
spec:
  selector: { app: api }
  ports:
    - name: http
      port: 80
      targetPort: 3001
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend
spec:
  replicas: {{ .Values.app.replicas }}
  selector: { matchLabels: { app: frontend } }
  template:
    metadata: { labels: { app: frontend } }
    spec:
      containers:
        - name: web
          image: "{{ .Values.image.repository }}/frontend:{{ .Values.image.tag }}"
          ports: [{ containerPort: 3000 }]
          env:
            - name: NEXT_PUBLIC_API_URL
              value: "https://{{ .Values.host }}"
---
apiVersion: v1
kind: Service
metadata: { name: frontend }
spec:
  selector: { app: frontend }
  ports:
    - name: http
      port: 80
      targetPort: 3000
