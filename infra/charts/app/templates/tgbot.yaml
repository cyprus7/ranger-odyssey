{{- if .Values.tgbot.enabled | default true }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: tgbot
  labels:
    app.kubernetes.io/name: tgbot
    app.kubernetes.io/component: bot
spec:
  replicas: {{ .Values.tgbot.replicas | default 1 }}
  selector:
    matchLabels: { app: tgbot }
  template:
    metadata:
      labels:
        app: tgbot
        app.kubernetes.io/name: tgbot
        app.kubernetes.io/component: bot
    spec:
      containers:
        - name: tgbot
          image: "{{ required "set .Values.image.repository" .Values.image.repository }}/tgbot:{{ required "set .Values.image.tag" .Values.image.tag }}"
          env:
            - name: API_URL
              value: {{ printf "https://%s%s" .Values.host (default "/api" .Values.apiPath) | quote }}
            - name: WEBAPP_URL
              value: {{ printf "https://%s" .Values.host | quote }}
            - name: BOT_TOKEN
              valueFrom: { secretKeyRef: { name: app-secrets, key: BOT_TOKEN } }
            - name: JWT_SECRET
              valueFrom: { secretKeyRef: { name: app-secrets, key: JWT_SECRET } }
            - name: JWT_TTL_SEC
              value: "900"
            - name: PORT
              value: "{{ .Values.tgbot.port | default 3000 }}"
            # Webhook env:
            - name: PUBLIC_BASE_URL
              value: {{ printf "https://%s" .Values.host | quote }}
            - name: WEBHOOK_PATH
              value: {{ .Values.tgbot.webhookPath | default "/tgbot/webhook" | quote }}
            - name: TELEGRAM_SECRET_TOKEN
              valueFrom: { secretKeyRef: { name: app-secrets, key: TELEGRAM_SECRET_TOKEN } }
            - name: OTEL_METRICS_EXPORTER
              value: "prometheus"
            - name: OTEL_PROM_PORT
              value: "9464"
            - name: OTEL_PROM_ENDPOINT
              value: "/metrics"
            - name: OTEL_SERVICE_NAME
              value: "tgbot"
            - name: OTEL_RESOURCE_ATTRIBUTES
              value: "service.version={{ .Values.image.tag }},deployment.environment={{ .Release.Namespace }},service.namespace={{ .Release.Namespace }},service.instance.id=$(HOSTNAME)"
            - name: OTEL_TRACES_EXPORTER
              value: "none"
            - name: OTEL_LOGS_EXPORTER
              value: "none"
          ports:
            - containerPort: {{ .Values.tgbot.port | default 3000 }}
              name: http
            - containerPort: 9464
              name: metrics
          livenessProbe:
            httpGet:
              path: /health
              port: {{ .Values.tgbot.port | default 3000 }}
            initialDelaySeconds: 10
            periodSeconds: 20
          readinessProbe:
            httpGet:
              path: /health
              port: {{ .Values.tgbot.port | default 3000 }}
            initialDelaySeconds: 5
            periodSeconds: 10
      {{- if .Values.tgbot.resources }}
      resources:
        {{- toYaml .Values.tgbot.resources | nindent 8 }}
      {{- end }}
---
apiVersion: v1
kind: Service
metadata:
  name: tgbot
  labels:
    app.kubernetes.io/name: tgbot
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/path: "/metrics"
    prometheus.io/port: "9464"
spec:
  selector:
    app: tgbot
  ports:
    - name: http
      port: 80
      targetPort: {{ .Values.tgbot.port | default 3000 }}
    - name: metrics
      port: 9464
      targetPort: 9464
{{- end }}
