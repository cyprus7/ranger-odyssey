apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend
  labels:
    app.kubernetes.io/name: frontend
    app.kubernetes.io/component: web
spec:
  replicas: {{ .Values.frontend.replicas | default 2 }}
  selector:
    matchLabels:
      app: frontend
  template:
    metadata:
      labels:
        app: frontend
        app.kubernetes.io/name: frontend
        app.kubernetes.io/component: web
    spec:
      containers:
        - name: web
          image: "{{ required "set .Values.image.repository" .Values.image.repository }}/frontend:{{ required "set .Values.image.tag" .Values.image.tag }}"
          ports:
            - containerPort: 3000
              name: http
          env:
            {{- /* Берём домен из publicHost или, для совместимости, из ingress.host */}}
            {{- $host := coalesce .Values.publicHost (dig "ingress" "host" "" .Values) -}}
            {{- $host := required "set either .Values.publicHost (preferred) or .Values.ingress.host" $host -}}
            - name: NEXT_PUBLIC_API_URL
              value: "https://{{ $host }}{{ default \"/api\" .Values.apiPath }}"
          resources:
            {{- toYaml (.Values.frontend.resources | default dict) | nindent 12 }}
---
apiVersion: v1
kind: Service
metadata:
  name: frontend
  labels:
    app.kubernetes.io/name: frontend
spec:
  selector:
    app: frontend
  ports:
    - name: http
      port: 80
      targetPort: 3000
